kafka:
  bootstrap-servers: "35.239.160.14:9092"
  topic-name: "reservation"
  group-id: "reservation-alarm"

spring:
  kafka:
    consumer:
      bootstrap-servers: 35.239.160.14:9092
      group-id: reservation-alarm
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: update
    open-in-view: false

    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_batch_fetch_size: 1000
        use_sql_comments: true

  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

  datasource:
    username: connectuser
    password: connect123!@#
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://35.232.22.234:3306/connectdb?serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=utf8
    maximumPoolSize: 100
    minimumIdle: 100
server:
  port: 8975

notification:
  slack:
    enabled: true
    webhook:
      url: "https://hooks.slack.com/services/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"
    channel: '#test'
    botName: "incoming-webhook"
    icon:
      emoji:
      url:

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

coolsms:
  api:
    key: "NCSFFKZGLSBSZQDV"
    secret: "OFB5SOC7XNFIAC7BLN8G9UNIJYV7YCZR"
    send-no: "010-7173-1403"