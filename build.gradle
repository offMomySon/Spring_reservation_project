buildscript {
    ext {
        elasticsearchVersion = '7.10.0'
    }
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"
apply plugin: 'war'

bootWar {
    baseName = 'jihun'
    archiveName 'jihun.war'
}

group = 'kr.or.connect.webapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.2'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:log4j-over-slf4j:1.7.25'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.25'
    implementation 'org.slf4j:jul-to-slf4j:1.7.25'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1'

    // elasticsearch
    implementation("org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}")
    implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
    implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"

    // connection pool
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.3.2'
    implementation 'mysql:mysql-connector-java'

    compile('javax.servlet:jstl:1.2')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')

    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation("org.springframework.boot:spring-boot-starter-data-redis")

    implementation 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    //query queryDsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'

    //junit test
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation "javax.xml.bind:jaxb-api:2.3.0"
    implementation "com.sun.xml.bind:jaxb-core:2.3.0"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.0"
    implementation "javax.activation:activation:1.1.1"
}

test {
    useJUnitPlatform()
}

//querydsl 추가
//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}